"use strict";(self.webpackChunknovela_blog=self.webpackChunknovela_blog||[]).push([[818],{5450:function(e,n,t){t.r(n),t.d(n,{default:function(){return L}});var a=t(5276),o=t(3942),r=t(8453),s=t(6540);function l(e){const n=Object.assign({p:"p",h2:"h2",h3:"h3",strong:"strong"},(0,r.R)(),e.components);return s.createElement(s.Fragment,null,s.createElement(n.p,null,"I have been working with Kafka for a while now. I wanted to blog about some of the common failure patterns\nI have seen in associated with Kafka Rebalancing, Kafka lag and Deployments."),"\n",s.createElement(n.h2,null,"Context"),"\n",s.createElement(n.h3,null,"Kafka Consumer Rebalancing"),"\n",s.createElement(n.p,null,"Kafka has this concept of Consumer Groups. Each consumer group can independently consume messages\nfrom a given Kafka topic. Each Kafka partition is consumed by a single Kafka consumer within a\nconsumer group. This behavior is very vital when providing processing order guarantees during event\nconsumption. But that’s a story for another day. Anyway, Kafka would make sure that all the partitions\nare being assigned to a Kafka consumer."),"\n",s.createElement(n.p,null,"But what happens when one or more than one Kafka consumer goes down or a new consumer joins the group?"),"\n",s.createElement(n.p,null,"That’s when the Kafka brokers trigger a process called Kafka Consumer Rebalancing. This process\nredistributes the partitions among the consumers of the consumer group. But, this process causes a\nstop the world effect on message consumption. During the process, non of the consumers are not able\nto consume any message."),"\n",s.createElement(n.h3,null,"Kafka Lag"),"\n",s.createElement(n.p,null,"During Kafka consumer rebalances the stop the world effect could cause unconsumed kafka messages\nto get piled up in the topic. The term ",s.createElement(n.strong,null,"Kafka Consumer Lag")," refers to the delta between\nthe production and consumption of Kafka messages."),"\n",s.createElement(n.h2,null,"Consumers getting overwhelmed due to high Kafka lag"),"\n",s.createElement(n.p,null,"When Kafka lag is high, Kafka consumers try to consume all the messages piled up in the topic\nvery fast. This could cause the kafka consumers to hit the resource limits and get restarted\nor killed (eg: if the consumer runs on Kubernetes). During very high loads, this effect can cause\nmassive service disruptions."),"\n",s.createElement(n.h3,null,"The Backpressure"),"\n",s.createElement(n.p,null,"The best way to fix this is implementing back preassure on Kafka consumers."),"\n",s.createElement(n.p,null,"The term backpressure refers to the ability to control the flow of incoming data. In the context of\nKafka Consumers, that means the ability of the Kafka consumer to control the rate of processing\nincoming kafka messages. This gives the kafka consumer the ability to consume messages in a constant\nrate even if there is a very high kafka lag."),"\n",s.createElement(n.h3,null,"Discarding older events"),"\n",s.createElement(n.p,null,"Another approach would be to discard messages that exceed a specified age threshold. This is\na highly contextual way to battle the kafka lag and wouldn’t be suitable for some scenarios.\nIn certain cases, it might be meaningful to only consider events occured in past few minutes\n(in real time systems). In such cases, we can add a simple condition to simply discard the\nolder events which aren’t really worth processing."),"\n",s.createElement(n.h2,null,"Kafka consumers and Kubernetes rolling deployments"),"\n",s.createElement(n.p,null,"Kubernetes rolling deployments is a way of doing deployments within kubernetes. It will gradually replace the\nolder pods with the newer version pods. But rolling deployments might not be ideal for the kafka consumers."),"\n",s.createElement(n.p,null,"During rolling deployments, Kubernetes gradually spawns new pods while simultaneously terminating older ones.\nHowever, when considering a single Kafka consumer group, the addition of each new Kafka consumer can trigger\nrebalances, as can the removal of old consumers. This process can lead to multiple rebalances, resulting in\nseveral interruptions to Kafka message consumption."),"\n",s.createElement(n.h3,null,"Batch Deployments"),"\n",s.createElement(n.p,null,"One of the ways to mitigate this is doing batchwise deployments. Since most of the kafka consumers joins\nthe group during the same time it can drastically reduce the number of triggered rebalances."))}var i,c,u,h,m,g,p,d,f=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.R)(),e.components);return n?s.createElement(n,e,s.createElement(l,e)):l(e)},k=t(7350),b=t.n(k),w=t(4794),E=t(1589),y=t(2267),v=t(1110),A=t(5922),K=t(8729),x=t(396),C=t(1601),T=t(6574),j=t(9618),B=t(8947),D=t(9818),I=t(7507),R=t(958);const S=e=>{let{pageContext:n,location:t,children:a}=e;const o=(0,s.useRef)(null),{0:r,1:l}=(0,s.useState)(!1),{0:i,1:c}=(0,s.useState)(0),u=(0,w.useStaticQuery)("1921650733").allSite.edges[0].node.siteMetadata.name,{article:h,authors:m,next:g}=n;return(0,s.useEffect)((()=>{const e=b()((()=>{const n=o.current;if(n){if(!r){const t=(0,x.sg)(e);n.querySelectorAll("img").forEach((e=>{e.complete||(e.onload=t)})),l(!0)}c(n.getBoundingClientRect().height)}}),20);return e(),window.addEventListener("resize",e),()=>window.removeEventListener("resize",e)}),[]),s.createElement(E.A,null,s.createElement(D.A,{article:h,authors:m,location:t}),s.createElement(T.A,{article:h,authors:m}),s.createElement(C.A,{contentHeight:i},s.createElement(v.A,{contentHeight:i})),s.createElement(z,null,s.createElement(j.A)),s.createElement(H,{ref:o},s.createElement(y.A,null,s.createElement(I.A),a)),s.createElement(R.A,{pageContext:n}),g.length>0&&s.createElement(O,{narrow:!0},s.createElement(_,null,"More articles from ",u),s.createElement(B.A,{articles:g}),s.createElement(q)))};function L(e){return s.createElement(S,e,s.createElement(f,e))}const z=(0,o.A)("div",{target:"e1rojouh4"})("position:relative;padding-top:60px;transition:background 0.2s linear;text-align:center;",K.A.tablet_up(i||(i=(0,a.A)(["\n    display: none;\n  "]))),";"),H=(0,o.A)("article",{target:"e1rojouh3"})("position:relative;padding:160px 0 35px;padding-left:68px;transition:background 0.2s linear;",K.A.desktop(c||(c=(0,a.A)(["\n    padding-left: 53px;\n  "])))," ",K.A.tablet(u||(u=(0,a.A)(["\n    padding: 70px 0 80px;\n  "])))," ",K.A.phablet(h||(h=(0,a.A)(["\n    padding: 60px 0;\n  "]))),";"),O=(0,o.A)(A.A,{target:"e1rojouh2"})({name:"4zleql",styles:"display:block"}),_=(0,o.A)("h3",{target:"e1rojouh1"})("position:relative;opacity:0.25;margin-bottom:100px;font-weight:400;color:",(e=>e.theme.colors.primary),";",K.A.tablet(m||(m=(0,a.A)(["\n    margin-bottom: 60px;\n  "])))," &::after{content:'';position:absolute;background:",(e=>e.theme.colors.grey),";width:",810/1140*100,"%;height:1px;right:0;top:11px;",K.A.tablet(g||(g=(0,a.A)(["\n      width: ","%;\n    "])),600/1140*100)," ",K.A.phablet(p||(p=(0,a.A)(["\n      width: ","%;\n    "])),400/1140*100)," ",K.A.phone(d||(d=(0,a.A)(["\n      width: 90px\n    "]))),";}"),q=(0,o.A)("div",{target:"e1rojouh0"})({name:"n4muu5",styles:"margin-bottom:65px"})}}]);
//# sourceMappingURL=component---node-modules-sudaraka-94-gatsby-theme-novela-src-templates-article-template-tsx-content-file-path-content-posts-2024-10-13-high-kafka-lag-during-deployments-index-mdx-1411a7e28d6f3c1e0729.js.map