{"version":3,"file":"aeee612a-6bb95d384bba71fc7e71.js","mappings":"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","sources":["webpack://novela-blog/./node_modules/@sudaraka94/gatsby-theme-novela/src/sections/articles/Articles.List.tsx"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/react';\nimport { Link } from 'gatsby';\n\nimport Headings from '@components/Headings';\nimport Image, { ImagePlaceholder } from '@components/Image';\n\nimport mediaqueries from '@styles/media';\nimport { IArticle } from '@types';\n\nimport { GridLayoutContext } from './Articles.List.Context';\n\n/**\n * Tiles\n * [LONG], [SHORT]\n * [SHORT], [LONG]\n * [SHORT], [LONG]\n *\n * or ------------\n *\n * Rows\n * [LONG]\n * [LONG]\n * [LONG]\n */\n\ninterface ArticlesListProps {\n  articles: IArticle[];\n  alwaysShowAllDetails?: boolean;\n}\n\ninterface ArticlesListItemProps {\n  article: IArticle;\n  narrow?: boolean;\n}\n\nconst ArticlesList: React.FC<ArticlesListProps> = ({\n  articles,\n  alwaysShowAllDetails,\n}) => {\n  if (!articles) return null;\n\n  const hasOnlyOneArticle = articles.length === 1;\n  const { gridLayout = 'tiles', hasSetGridLayout, getGridLayout } = useContext(\n    GridLayoutContext,\n  );\n\n  /**\n   * We're taking the flat array of articles [{}, {}, {}...]\n   * and turning it into an array of pairs of articles [[{}, {}], [{}, {}], [{}, {}]...]\n   * This makes it simpler to create the grid we want\n   */\n  const articlePairs = articles.reduce((result, value, index, array) => {\n    if (index % 2 === 0) {\n      result.push(array.slice(index, index + 2));\n    }\n    return result;\n  }, []);\n\n  useEffect(() => getGridLayout(), []);\n\n  return (\n    <ArticlesListContainer\n      style={{ opacity: hasSetGridLayout ? 1 : 0 }}\n      alwaysShowAllDetails={alwaysShowAllDetails}\n    >\n      {articlePairs.map((ap, index) => {\n        const isEven = index % 2 !== 0;\n        const isOdd = index % 2 !== 1;\n\n        return (\n          <List\n            key={index}\n            gridLayout={gridLayout}\n            hasOnlyOneArticle={hasOnlyOneArticle}\n            reverse={isEven}\n          >\n            <ListItem article={ap[0]} narrow={isEven} />\n            <ListItem article={ap[1]} narrow={isOdd} />\n          </List>\n        );\n      })}\n    </ArticlesListContainer>\n  );\n};\n\nexport default ArticlesList;\n\nconst ListItem: React.FC<ArticlesListItemProps> = ({ article, narrow }) => {\n  if (!article) return null;\n\n  const { gridLayout } = useContext(GridLayoutContext);\n  const hasOverflow = narrow && article.title.length > 35;\n  const imageSource = narrow ? article.hero.narrow : article.hero.regular;\n  const hasHeroImage =\n    imageSource &&\n    Object.keys(imageSource).length !== 0 &&\n    imageSource.constructor === Object;\n\n  return (\n    <ArticleLink to={article.slug} data-a11y=\"false\">\n      <Item gridLayout={gridLayout}>\n        <ImageContainer narrow={narrow} gridLayout={gridLayout}>\n          {hasHeroImage ? <Image src={imageSource} /> : <ImagePlaceholder />}\n        </ImageContainer>\n        <div>\n          <Title dark hasOverflow={hasOverflow} gridLayout={gridLayout}>\n            {article.title}\n          </Title>\n          <Excerpt\n            narrow={narrow}\n            hasOverflow={hasOverflow}\n            gridLayout={gridLayout}\n          >\n            {article.excerpt}\n          </Excerpt>\n          <MetaData>\n            {article.date} Â· {article.timeToRead}\n          </MetaData>\n        </div>\n      </Item>\n    </ArticleLink>\n  );\n};\n\nconst wide = '1fr';\nconst narrow = '457px';\n\nconst limitToTwoLines = css`\n  text-overflow: ellipsis;\n  overflow-wrap: normal;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  display: -webkit-box;\n  white-space: normal;\n  overflow: hidden;\n\n  ${mediaqueries.phablet`\n    -webkit-line-clamp: 3;\n  `}\n`;\n\nconst showDetails = css`\n  p {\n    display: -webkit-box;\n  }\n\n  h2 {\n    margin-bottom: 10px;\n  }\n`;\n\nconst ArticlesListContainer = styled.div<{ alwaysShowAllDetails?: boolean }>`\n  transition: opacity 0.25s;\n  ${p => p.alwaysShowAllDetails && showDetails}\n`;\n\nconst listTile = p => css`\n  position: relative;\n  display: grid;\n  grid-template-columns: ${p.reverse\n    ? `${narrow} ${wide}`\n    : `${wide} ${narrow}`};\n  grid-template-rows: 2;\n  column-gap: 30px;\n\n  &:not(:last-child) {\n    margin-bottom: 75px;\n  }\n\n  ${mediaqueries.desktop_medium`\n    grid-template-columns: 1fr 1fr;\n  `}\n\n  ${mediaqueries.tablet`\n    grid-template-columns: 1fr;\n    \n    &:not(:last-child) {\n      margin-bottom: 0;\n    }\n  `}\n`;\n\nconst listItemRow = p => css`\n  display: grid;\n  grid-template-rows: 1fr;\n  grid-template-columns: 1fr 488px;\n  grid-column-gap: 96px;\n  grid-template-rows: 1;\n  align-items: center;\n  position: relative;\n  margin-bottom: 50px;\n\n  ${mediaqueries.desktop`\n    grid-column-gap: 24px;\n    grid-template-columns: 1fr 380px;\n  `}\n\n  ${mediaqueries.tablet`\n    grid-template-columns: 1fr;\n  `}\n\n  @media (max-width: 540px) {\n    background: ${p.theme.colors.card};\n  }\n\n  ${mediaqueries.phablet`\n    box-shadow: 0px 20px 40px rgba(0, 0, 0, 0.2);\n    border-bottom-right-radius: 5px;\n    border-bottom-left-radius: 5px;\n  `}\n`;\n\nconst listItemTile = p => css`\n  position: relative;\n\n  ${mediaqueries.tablet`\n    margin-bottom: 60px;\n  `}\n\n  @media (max-width: 540px) {\n    background: ${p.theme.colors.card};\n  }\n\n  ${mediaqueries.phablet`\n    margin-bottom: 40px;\n    box-shadow: 0px 20px 40px rgba(0, 0, 0, 0.2);\n    border-bottom-right-radius: 5px;\n    border-bottom-left-radius: 5px;\n  `}\n`;\n\n// If only 1 article, dont create 2 rows.\nconst listRow = p => css`\n  display: grid;\n  grid-template-rows: ${p.hasOnlyOneArticle ? '1fr' : '1fr 1fr'};\n`;\n\nconst List = styled.div<{\n  reverse: boolean;\n  gridLayout: string;\n  hasOnlyOneArticle: boolean;\n}>`\n  ${p => (p.gridLayout === 'tiles' ? listTile : listRow)}\n`;\n\nconst Item = styled.div<{ gridLayout: string }>`\n  ${p => (p.gridLayout === 'rows' ? listItemRow : listItemTile)}\n`;\n\nconst ImageContainer = styled.div<{ narrow: boolean; gridLayout: string }>`\n  position: relative;\n  height: ${p => (p.gridLayout === 'tiles' ? '280px' : '220px')};\n  box-shadow: 0 30px 60px -10px rgba(0, 0, 0, ${p => (p.narrow ? 0.22 : 0.3)}),\n    0 18px 36px -18px rgba(0, 0, 0, ${p => (p.narrow ? 0.25 : 0.33)});\n  margin-bottom: ${p => (p.gridLayout === 'tiles' ? '30px' : 0)};\n  transition: transform 0.3s var(--ease-out-quad),\n    box-shadow 0.3s var(--ease-out-quad);\n\n  & > div {\n    height: 100%;\n  }\n\n  ${mediaqueries.tablet`\n    height: 200px;\n    margin-bottom: 35px;\n  `}\n\n  ${mediaqueries.phablet`\n    overflow: hidden;\n    margin-bottom: 0;\n    box-shadow: none;\n    border-top-right-radius: 5px;\n    border-top-left-radius: 5px;\n  `}\n`;\n\nconst Title = styled(Headings.h2)`\n  font-size: 21px;\n  font-family: ${p => p.theme.fonts.serif};\n  margin-bottom: ${p =>\n    p.hasOverflow && p.gridLayout === 'tiles' ? '35px' : '10px'};\n  transition: color 0.3s ease-in-out;\n  ${limitToTwoLines};\n\n  ${mediaqueries.desktop`\n    margin-bottom: 15px;\n  `}\n\n  ${mediaqueries.tablet`\n    font-size: 24px;  \n  `}\n\n  ${mediaqueries.phablet`\n    font-size: 22px;  \n    padding: 30px 20px 0;\n    margin-bottom: 10px;\n    -webkit-line-clamp: 3;\n  `}\n`;\n\nconst Excerpt = styled.p<{\n  hasOverflow: boolean;\n  narrow: boolean;\n  gridLayout: string;\n}>`\n  ${limitToTwoLines};\n  font-size: 16px;\n  margin-bottom: 10px;\n  color: ${p => p.theme.colors.grey};\n  display: ${p => (p.hasOverflow && p.gridLayout === 'tiles' ? 'none' : 'box')};\n  max-width: ${p => (p.narrow ? '415px' : '515px')};\n\n  ${mediaqueries.desktop`\n    display: -webkit-box;\n  `}\n\n  ${mediaqueries.phablet`\n    margin-bottom: 15px;\n  `}\n\n  ${mediaqueries.phablet`\n    max-width: 100%;\n    padding:  0 20px;\n    margin-bottom: 20px;\n    -webkit-line-clamp: 3;\n  `}\n`;\n\nconst MetaData = styled.div`\n  font-weight: 600;\n  font-size: 16px;\n  color: ${p => p.theme.colors.grey};\n  opacity: 0.33;\n\n  ${mediaqueries.phablet`\n    max-width: 100%;\n    padding:  0 20px 30px;\n  `}\n`;\n\nconst ArticleLink = styled(Link)`\n  position: relative;\n  display: block;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  border-radius: 5px;\n  z-index: 1;\n  transition: transform 0.33s var(--ease-out-quart);\n  -webkit-tap-highlight-color: rgba(255, 255, 255, 0);\n\n  &:hover ${ImageContainer}, &:focus ${ImageContainer} {\n    transform: translateY(-1px);\n    box-shadow: 0 50px 80px -20px rgba(0, 0, 0, 0.27),\n      0 30px 50px -30px rgba(0, 0, 0, 0.3);\n  }\n\n  &:hover h2,\n  &:focus h2 {\n    color: ${p => p.theme.colors.accent};\n  }\n\n  &[data-a11y='true']:focus::after {\n    content: '';\n    position: absolute;\n    left: -1.5%;\n    top: -2%;\n    width: 103%;\n    height: 104%;\n    border: 3px solid ${p => p.theme.colors.accent};\n    background: rgba(255, 255, 255, 0.01);\n    border-radius: 5px;\n  }\n\n  ${mediaqueries.phablet`\n    &:hover ${ImageContainer} {\n      transform: none;\n      box-shadow: initial;\n    }\n\n    &:active {\n      transform: scale(0.97) translateY(3px);\n    }\n  `}\n`;\n"],"names":["_ref","articles","alwaysShowAllDetails","hasOnlyOneArticle","length","gridLayout","hasSetGridLayout","getGridLayout","useContext","GridLayoutContext","articlePairs","reduce","result","value","index","array","push","slice","useEffect","___EmotionJSX","ArticlesListContainer","style","opacity","map","ap","isEven","isOdd","List","key","reverse","ListItem","article","narrow","_ref2","hasOverflow","title","imageSource","hero","regular","hasHeroImage","Object","keys","constructor","ArticleLink","to","slug","Item","ImageContainer","Image","src","ImagePlaceholder","Title","dark","Excerpt","excerpt","MetaData","date","timeToRead","limitToTwoLines","css","mediaqueries","phablet","_templateObject","_taggedTemplateLiteralLoose","showDetails","name","styles","_styled","target","p","listTile","wide","desktop_medium","_templateObject2","tablet","_templateObject3","listItemRow","desktop","_templateObject4","_templateObject5","theme","colors","card","_templateObject6","listItemTile","_templateObject7","_templateObject8","listRow","_templateObject9","_templateObject10","Headings","h2","fonts","serif","_templateObject11","_templateObject12","_templateObject13","grey","_templateObject14","_templateObject15","_templateObject16","_templateObject17","Link","accent","_templateObject18"],"sourceRoot":""}